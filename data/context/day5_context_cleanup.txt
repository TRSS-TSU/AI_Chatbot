Windows User Authentication.The LSA handles user logon and application authentications on the local system. If the authentication package processing the logon request supports pass-through authentication, the LSA can also log users on to other computers on the network. By default, Windows credentials are validated against the Security Accounts Manager (SAM) database on the local computer, or against Active Directory on a domain-joined computer, through the Winlogon service.Authentication packages are responsible for the following tasks:Analyzing logon data to determine whether a security principal is allowed to log on to a system.Establishing a new logon session and creating a unique logon identifier for the successfully authenticated principal. Passing security information to the LSA for the principal's security token. LSA loads authentication packages by using configuration information stored in the registry. Loading multiple authentication packages permits the LSA to support multiple logon processes and multiple security protocols.Authentication Packages. When user authentication is successful, a logon session begins and when the user logs off, the logon session ends. Logon sessions can be interactive or noninteractive. LSA performs an interactive authentication when a user logs on through the Graphical Identification and Authentication (GINA) DLL user interface. Noninteractive authentication is performed when an application uses the Security Support Provider Interface (SSPI) and a security package to establish a secure network connection. LSA Logon Sessions. A security support provider (SSP) that acts as an application layer between the SSPI and the other SSPs. For example,When an application calls into SSPI to log on to a network, it can specify an SSP to process the request. Currently, the Negotiate security package selects between Kerberos and Windows New Technology LAN Manager (NTLM). To allow Negotiate to select the Kerberos security provider, the client application must provide a service principal name (SPN), a user principal name (UPN), or a NetBIOS account name as the target name; otherwise, Negotiate always selects the NTLM security provider. When the user types query user or quser, it displays information about ALL users logged on to the system. NTLM is the authentication protocol used on networks that include systems running the Windows OS and on stand-alone systems. NTLM credentials are based on data obtained during the interactive logon process and consist of a domain name, a username, and a one-way hash of the user’s password. NTLM hashes are stored in the SAM database on a local system or in the NTDS IT database on the domain controller. Important locations for NTLM Authentication are: SYSTEM Registry file:  C:\Windows\system32\config\SYSTEM. SAM:  C:\Windows\system32\config\SAM. NTDS (DC):  C:\Windows\NTDS\NTDS(dot)dit Registry Local Creds:  HKLM\SAM. Registry Domain Creds: HKLM\Security\Cache. In-memory (lsass(dot)exe):  Dump creds with tools like Mimikatz. When a user attempts to login with a local account, the username and NTLM hash is compared to what is stored in the SAM database. Over the network, NTLM uses an encrypted challenge/response protocol to authenticate a user without sending the user’s password. The follwoing are the steps for NTLM (over network domain):Authentication Request: Client sends username. NTLM Challenge: Server sends 8-byte random number, NTLM Response: Client encrypts challenge with hash. Confirmation/Denial:Server enables or blocks access. NTLM are subject to several known security vulnerabilities, one is the cryptographic use of MD4 to hash the passwords stored. NTLM hashes are also not “salted” – meaning that a random string is not added to the hashed password to further protect from cracking. Most importantly, if an adversary has a user’s NTLM hash, they can “pass-the-hash” to authenticate a session as the user. Lastly, Negotiate will default to NTLM authentication when Kerberos is not available. The following is the path for the Local Group Policy Editor: Local Computer Policy, Computer Configuration, Windows Settings, Security Settings, Local Policies, Security Options, Network security: the following is the path for the Local Security Policy: Security Settings, Local Policies, Security Options, Network security: the following is the path for the Registry Location: HKLM\System\CurrentControlSet\Control\Lsa\LmCompatibilityLevel. The Kerberos authentication protocol provides a mechanism for mutual authentication between entities. Kerberos utilizes a Key Distribution Center (KDC) as a service running on all domain controllers. Clients obtain tickets from the Kerberos Key Distribution Center (KDC), and they present these tickets to servers when connections are established. Kerberos tickets represent the client's network credentials.The Kerberos components are the following: Authentication Service (AS), Ticket Granting Service (TGS), Kerberos Database (KD).Risks involved with Kerberos is that if one of the domain controllers are compromised, a “Golden Ticket”  or “Silver Ticket” can be created. Golden Tickets are forged Ticket Granting Tickets (TGTs) that are encrypted/signed by the domain Kerberos account (krbtgt) hash. Silver Tickets are forged TGSs that are encrypted/signed by a Service Account (computer account or user account) hash. Ticket Forgery Limitations - Must have been forged targeting a user in the Enterprise Admins group to leverage multi-domain trust and tickets have an expiration but can be set to 10 years for persistence.WMIC stands for Windows Management Instrumentation Command Line. WMIC is used for querying Windows Management Instrumentation (WMI) entries to access and manage data for local or remote systems. Included with Windows XP Pro and later operating systems which are located i C:\Windows\System32\wbem\WMIC(dot)exe.The WMI files are stored in C:\ Windows\System32\wbem\Repository. WMI was Microsoft’s version of the “Common Information Model” (CIM) standard on how to display managed data in an easy-to-read format and the Web-Based Enterprise Management (WBEM). For a remote WMI connection to succeed, the remote pc must allow TCP ports 135, 445, and dynamically assigned ports 1024-1034. Microsoft addressed many of the security concerns with WMI by releasing the Windows Remote Management (WinRM) service, more commonly called PSRemoting.The Web Services for Management (WSMan) protocol is used to transfer data.WSMan uses ports 5985 and 5986 and connects via HTTP and HTTPS.By default, all traffic is encrypted even when using HTTP and PSRemoting leverages Active Directory for authentication.PowerShell has WMI cmdlets but there are newer CIM cmdlets which utilize WinRM if security is a concern. WMI and CIM cmdlets mainly differ in the protocols and security in use when accessing a remote computer. With WMI being deprecated, moving from WMI to CIM is usually as simple as swapping the Get-WmiObject with Get-CimInstance.Why Auditing? Thorough auditing helps organizations remain compliant with data protection requirements, identify potential threats (such as unwanted changes) early, and help to reduce the risk of a data breach. Microsoft has several tables that go over their recommended audit policies by Windows variant and what the default audit settings are.The 9 types of auditing are: Account Logon Events: Tracks logins, logouts, and network connections. Account Management: Tracks changes to accounts. Directory Service Access: Tracks access to the Active Directory services. Logon Events: Tracks logins, logouts and network connections. Object Access: Tracks access to files, directories, and other NTFS objects. Policy Change: Tracks changes to user rights, audit policies, and trusts.Privilege Use: Tracks changes to user privileges. Process Tracking: Tracks program activation and termination, process activity. System Events: Tracks server shutdowns and restarts, and logs events affecting system policy. When logs are generated by one of the 9 types of auditing, they are stored by default in C:\Windows\System32\winevt\logs.Categories for Event Viewer are: Systems, Contains events logged by the Windows system components that failed during startup. Such as Drivers or other system components. Application, Contains events logged by applications or programs.The program developer decides which events to record. Security, If configured to do so,  records security events, such as valid/invalid logon attempts. Events related to resource use-such as creating, opening, or deleting files can also be logged. The follwoing are found in Application and System Logs. Error,A significant problem, such as loss of data or loss of functionality.Warning, An event that is not necessarily significant but might indicate a possible future problem.Information, An event that describes the successful operation of an application, driver, or service. The following are Found in Security Logs, Success Audit, An audited security event in which a user’s attempt to access a resource succeeds. Failed Audit, An audited security event in which a user’s attempt to access a resource fails. Event ID is used to uniquely identify a particular event. Each event source can define its own numbered events and the description. Event ID 4697 is for new service installed. Event ID 106 is for new task registered in Task Scheduler. Event ID 1102 is for windows security audit log cleared.Event ID 4625 is for An account failed to log on. Useful Commands for CLI are Get-EventLog: Gets the events in an event log, or list of the event logs, on the local or remote computer. Write-EventLog, Writes an event to an event log. Limit-EventLog, Sets the event log properties that limit the size of the event log and its entries. Get-WinEvent, More powerful to use compared to Get-Event Log because it allows filtering via a hash table but also more complicated. Get-CimInstance or Get-WmiObject, There are two operating system classes to help with viewing or parsing Event Logs. The CMD uses (dot)bat files to automate tasks also utilizes variables, logic, and conditions and can be made with text editor of choice. PowerShell uses .ps1 files to automate tasks, utilizes variables, logic, and conditions and can be made with text editor of choice or PowerShell’s ISE. 
